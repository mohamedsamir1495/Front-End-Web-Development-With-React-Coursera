{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/forms.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","to","active","href","role","model","onSubmit","htmlFor","md","text","id","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","About","RenderLeader","tag","left","middle","object","body","heading","console","log","leaders","map","title","list","RenderMenuItem","width","Menu","menu","dishes","key","CommentForm","handleToggle","setState","modalOpen","state","submitHandle","postComment","dishId","rating","author","comment","Fragment","onClick","isOpen","toggle","value","defaultValue","RenderDish","top","RenderComments","comments","commentsAsReactComponents","date","Intl","DateTimeFormat","year","month","day","format","Date","parse","DishDetail","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","height","navbar","outline","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","newValue","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","Dishes","action","Comments","concat","Promotions","Leaders","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yB,QCMvB,SAASC,EAAT,GAAsD,IAAD,IAAhCC,YAAgC,MAAzB,GAAyB,EAArBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAEvC,OAAID,EAEI,kBAAC,EAAD,MAEGC,EAEH,4BAAKA,GAIL,kBAAC,gBAAD,CAAeC,IAAE,EAACC,eAAgB,CAACC,cAAe,gCAC9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAC9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYT,EAAKS,MAChBT,EAAKU,YAAc,kBAAC,IAAD,KAAeV,EAAKU,aAA8B,KACtE,kBAAC,IAAD,KAAWV,EAAKW,gBA2BzBC,MAlBf,SAAcC,GACV,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMC,KAAMb,UAAWY,EAAME,cAAeb,QAASW,EAAMG,eAEjF,yBAAKnB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMI,UAAWhB,UAAWY,EAAMK,aAAchB,QAASW,EAAMM,gBAErF,yBAAKtB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMO,OAAQnB,UAAWY,EAAMQ,eAAgBnB,QAASW,EAAMS,qB,sBCvC9FC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IAuM9DU,E,kDApMX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,yDAMNC,GACTC,KAAKzB,MAAM0B,aAAaF,GACxBC,KAAKzB,MAAM2B,sB,+BAKL,IAAD,OACL,OACI,yBAAK3C,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4C,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK7C,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,gBAJjB,mBAImD,6BAC/C,uBAAGA,UAAU,cALjB,mBAKiD,6BAC7C,uBAAGA,UAAU,mBANjB,KAMwC,uBACpC8C,KAAK,6BAD+B,wBAI5C,yBAAK9C,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY+C,KAAK,SAC5B,uBAAGA,KAAK,SAAS/C,UAAU,kBAAkB8C,KAAK,oBAC9C,uBAAG9C,UAAU,gBADjB,SAGA,uBAAG+C,KAAK,SAASD,KAAK,mBAAmB9C,UAAU,gBAAe,uBAC9DA,UAAU,gBADd,UAEA,uBAAG+C,KAAK,SAAS/C,UAAU,kBAAkB8C,KAAK,6BAC9C,uBAAG9C,UAAU,qBADjB,aAKZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAMgD,MAAM,WAAWC,SAAU,SAACT,GAAD,OAAY,EAAKF,aAAaE,KAC3D,kBAAC,IAAD,CAAKxC,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,aAAaK,GAAG,YAAYzC,KAAK,YACvC0C,YAAY,aACZtD,UAAU,eACVuD,WAAY,CACR7B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAG1E,kBAAC,SAAD,CACI7B,UAAU,cACVgD,MAAM,aACNQ,KAAK,UACLC,SAAU,CACN/B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAK7B,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,YAAYK,GAAG,WAAWzC,KAAK,WACrC0C,YAAY,YACZtD,UAAU,eACVuD,WAAY,CACR7B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAG1E,kBAAC,SAAD,CACI7B,UAAU,cACVgD,MAAM,YACNQ,KAAK,UACLC,SAAU,CACN/B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAK7B,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAUK,GAAG,SAASzC,KAAK,SACjC0C,YAAY,cACZtD,UAAU,eACVuD,WAAY,CACR7B,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBG,cAGlB,kBAAC,SAAD,CACIhC,UAAU,cACVgD,MAAM,UACNQ,KAAK,UACLC,SAAU,CACN/B,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B,kBAAC,IAAD,CAAKhC,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,SAASK,GAAG,QAAQzC,KAAK,QAC/B0C,YAAY,QACZtD,UAAU,eACVuD,WAAY,CACR7B,WAAUS,gBAG5B,kBAAC,SAAD,CACInC,UAAU,cACVgD,MAAM,SACNQ,KAAK,UACLC,SAAU,CACN/B,SAAU,WACVS,WAAY,6BAK5B,kBAAC,IAAD,CAAKnC,UAAU,cACX,kBAAC,IAAD,CAAKmD,GAAI,CAACO,KAAM,EAAGC,OAAQ,IACvB,yBAAK3D,UAAU,cACX,kBAAC,IAAD,CAAO4D,OAAK,GACR,kBAAC,UAAQC,SAAT,CAAkBb,MAAM,SAASpC,KAAK,QACpBZ,UAAU,qBAFhC,IAGQ,IACJ,0DAIZ,kBAAC,IAAD,CAAKmD,GAAI,CAACO,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQG,OAAT,CAAgBd,MAAM,eAAepC,KAAK,cAC1BZ,UAAU,gBACtB,wCACA,4CAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBf,MAAM,WAAWK,GAAG,UAAUzC,KAAK,UACnCoD,KAAK,KACLhE,UAAU,mBAGpC,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAKmD,GAAI,CAACO,KAAM,GAAIC,OAAQ,IACxB,kBAAC,IAAD,CAAQM,KAAK,SAASC,MAAM,WAA5B,2B,GAxLdC,aCyFPC,MA9Ff,SAAepD,GACX,SAASqD,EAAT,GAA0E,IAAD,IAAlD9C,OAASb,EAAyC,EAAzCA,MAAOE,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YACtD,OACI,kBAAC,IAAD,CAAOwD,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GACd,kBAAC,IAAD,CAAOC,QAAM,EAAChE,IAAKR,EAAUS,EAAOC,IAAKC,KAG7C,kBAAC,IAAD,CAAO8D,MAAI,EAAC1E,UAAU,QAClB,kBAAC,IAAD,CAAO2E,SAAO,GAAE/D,GAChB,2BAAIC,GACJ,2BAAIC,KAMpB8D,QAAQC,IAAI,UAAW7D,EAAM8D,SAC7B,IAAMA,EAAU9D,EAAM8D,QAAQC,KAAI,SAACxD,GAAD,OAAY,kBAAC,OAAD,CAAMjB,IAAE,GAAR,IAAU,kBAAC+D,EAAD,CAAc9C,OAAQA,QAE9E,OACI,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4C,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK7C,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,uaAKA,6EAAkD,8CAAlD,iIAIJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACI,0BAAMgF,MAAM,gBAAZ,0EAQxB,yBAAKhF,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAOiF,MAAI,GACP,kBAAC,UAAD,CAAS3E,IAAE,GAENwE,QCpF7B,SAASI,EAAT,GAAiC,IAARjE,EAAO,EAAPA,KACrB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM2B,GAAE,gBAAW3B,EAAKoC,KACpB,kBAAC,IAAD,CAAS8B,MAAM,OAAO1E,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYK,EAAKL,SAOrC,IA8CewE,EA9CF,SAACpE,GACV,IAAMqE,EAAOrE,EAAMsE,OAAOA,OAAOP,KAAI,SAAC9D,GAClC,OACI,yBAAKsE,IAAKtE,EAAKoC,GAAIrD,UAAU,uBACzB,kBAACkF,EAAD,CAAgBjE,KAAMA,QAIlC,OAAID,EAAMsE,OAAOlF,UAET,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAILgB,EAAMsE,OAAOjF,QAEhB,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKgB,EAAMsE,OAAOjF,YAO9B,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4C,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAK7C,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACVqF,KC9Bf3D,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGvD0D,E,kDACF,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IAMVyE,aAAe,kBAAM,EAAKC,SAAS,CAACC,WAAY,EAAKC,MAAMD,aAPxC,EASnBE,aAAe,SAACrD,GACZ,EAAKiD,eACL,EAAKzE,MAAM8E,YAAY,EAAK9E,MAAM+E,OAAQvD,EAAOwD,OAAQxD,EAAOyD,OAAQzD,EAAO0D,UAT/E,EAAKN,MAAQ,CACTD,WAAW,GAHA,E,qDAeT,IAlBK7D,EAkBN,OACL,OACI,kBAAC,IAAMqE,SAAP,KACI,kBAAC,IAAD,CAAQnG,UAAU,qBAAqBoG,QAAS3D,KAAKgD,cACjD,uBAAGzF,UAAU,uBADjB,mBAGA,kBAAC,IAAD,CAAOqG,OAAQ5D,KAAKmD,MAAMD,UAAWW,OAAQ7D,KAAKgD,cAC9C,kBAAC,IAAD,CAAaa,OAAQ7D,KAAKgD,cAA1B,kBACA,kBAAC,IAAD,KACI,kBAAC,YAAD,CAAWxC,SAAU,SAACsD,GAAD,OAAW,EAAKV,aAAaU,KAC9C,kBAAC,IAAD,CAAKvG,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,SAASC,GAAI,GAA5B,UACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQW,OAAT,CAAgBd,MAAM,UAAUK,GAAG,SAASzC,KAAK,SAASZ,UAAU,eACpDwG,aAAa,KACzB,qCACA,qCACA,qCACA,qCACA,wCAIZ,kBAAC,IAAD,CAAKxG,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,SAASC,GAAI,GAA5B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAUK,GAAG,SAASzC,KAAK,SAASZ,UAAU,eACpDsD,YAAY,YACZC,WAAY,CACRxB,WA/CnCD,EA+CwD,EA/ChD,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IAgDND,UAAWA,EAAU,OAGvC,kBAAC,SAAD,CACI7B,UAAU,cACVgD,MAAM,UACNQ,KAAK,UACLC,SAAU,CACN1B,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAK7B,UAAU,cACX,kBAAC,IAAD,CAAOkD,QAAQ,UAAUC,GAAI,GAA7B,WACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQY,SAAT,CAAkBf,MAAM,WAAWK,GAAG,UAAUzC,KAAK,UACnCZ,UAAU,eACVuD,WAAY,CAAC7B,YACbsC,KAAK,MAEvB,kBAAC,SAAD,CACIhE,UAAU,cACVgD,MAAM,WACNQ,KAAK,UACLC,SAAU,CAAC/B,SAAU,wBAIjC,kBAAC,IAAD,CAAK1B,UAAU,cACX,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQiE,KAAK,SAASC,MAAM,WAA5B,oB,GA7EXC,aAuF1B,SAASsC,EAAT,GAAyD,IAAD,IAAnCxF,KAAOP,EAA4B,EAA5BA,MAAOE,EAAqB,EAArBA,KAAME,EAAe,EAAfA,YACrC,OACI,kBAAC,gBAAD,CAAeR,IAAE,EAACC,eAAgB,CAACC,cAAe,gCAC9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASkG,KAAG,EAACjG,IAAKR,EAAUS,EAAOC,IAAKC,IACxC,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYA,GACZ,kBAAC,IAAD,KAAWE,MAO/B,SAAS6F,EAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,SAAUd,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAE5C,GADAnB,QAAQC,IAAI+B,GACI,MAAZA,EAAkB,CAClB,IAAMC,EAA4B,kBAAC,UAAD,CAASvG,IAAE,GACxCsG,EAAS7B,KAAI,YAAkC,IAAhC1B,EAA+B,EAA/BA,GAAI6C,EAA2B,EAA3BA,QAASD,EAAkB,EAAlBA,OAAQa,EAAU,EAAVA,KACjC,OACI,yBAAKvB,IAAKlC,GACN,4BAAK6C,GACL,6BACA,kCACQD,EADR,KAEI,IAAIc,KAAKC,eAAe,QAAS,CAC7BC,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKA,KAAKC,MAAMR,MAElC,kCAKhB,OAAO,wBAAI9G,UAAU,iBAChB6G,EACD,kBAAC,EAAD,CAAad,OAAQA,EAAQD,YAAaA,KAG9C,OAAO,8BAIf,IA+CeyB,EA/CI,SAACvG,GAChB,OAAIA,EAAMZ,UAEF,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAILgB,EAAMX,QAET,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKgB,EAAMX,WAIF,MAAdW,EAAMC,KAET,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KAEI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4C,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBC,QAAM,GAAE7B,EAAMC,KAAKL,OAEvC,yBAAKZ,UAAU,UACX,4BAAKgB,EAAMC,KAAKL,MAChB,+BAGR,yBAAKZ,UAAU,OACX,yBAAKA,UAAU,uBACX,kBAACyG,EAAD,CAAYxF,KAAMD,EAAMC,QAE5B,yBAAKjB,UAAU,uBACX,kBAAC2G,EAAD,CAAgBC,SAAU5F,EAAM4F,SAChBd,YAAa9E,EAAM8E,YACnBC,OAAQ/E,EAAMC,KAAKoC,QAM3C,+BC/EDmE,E,kDA7GX,WAAYxG,GAAQ,IAAD,8BACf,cAAMA,IAED4E,MAAQ,CACT6B,WAAW,EACXC,aAAa,GAGjB,EAAKC,UAAY,EAAKA,UAAUpF,KAAf,gBACjB,EAAKqF,YAAc,EAAKA,YAAYrF,KAAjB,gBACnB,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBAVJ,E,wDAcfE,KAAKiD,SAAS,CACV+B,WAAYhF,KAAKmD,MAAM6B,c,oCAK3BhF,KAAKiD,SAAS,CACVgC,aAAcjF,KAAKmD,MAAM8B,gB,kCAGrBI,GACRrF,KAAKmF,cACLG,MAAM,aAAetF,KAAKuF,SAASzB,MAAQ,cAAgB9D,KAAKwF,SAAS1B,MACnE,cAAgB9D,KAAKyF,SAASC,SACpCL,EAAMM,mB,+BAGA,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKtI,UAAU,aACX,kBAAC,IAAD,CAAeoG,QAAS3D,KAAKkF,YAC7B,kBAAC,IAAD,CAAa3H,UAAU,UAAU8C,KAAK,KAAI,yBAAKrC,IAAI,yBAAyB8H,OAAO,KACpCpD,MAAM,KACNxE,IAAI,2BACnD,kBAAC,IAAD,CAAU0F,OAAQ5D,KAAKmD,MAAM6B,UAAWe,QAAM,GAC1C,kBAAC,IAAD,CAAKA,QAAM,GACP,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASxI,UAAU,WAAW4C,GAAG,SAAQ,0BACrC5C,UAAU,qBADd,UAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW4C,GAAG,YAAW,0BACxC5C,UAAU,qBADd,cAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW4C,GAAG,SAAQ,0BACrC5C,UAAU,qBADd,UAGJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW4C,GAAG,cAAa,0BAC1C5C,UAAU,6BADd,iBAIR,kBAAC,IAAD,CAAKA,UAAU,UAAUwI,QAAM,GAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,SAAO,EAACrC,QAAS3D,KAAKmF,aAAa,0BACvC5H,UAAU,wBADd,eAOpB,kBAAC,IAAD,KACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAMhB,kBAAC,IAAD,CAAOqG,OAAQ5D,KAAKmD,MAAM8B,YAAapB,OAAQ7D,KAAKmF,aAChD,kBAAC,IAAD,CAAatB,OAAQ7D,KAAKmF,aAA1B,SACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM3E,SAAUR,KAAKoF,aACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3E,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOe,KAAK,OAAOZ,GAAG,WAAWzC,KAAK,WAC/B8H,SAAU,SAACC,GAAD,OAAW,EAAKX,SAAWW,MAEhD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOzF,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOe,KAAK,WAAWZ,GAAG,WAAWzC,KAAK,WACnC8H,SAAU,SAACC,GAAD,OAAW,EAAKV,SAAWU,MAEhD,kBAAC,IAAD,CAAW/E,OAAK,GACZ,kBAAC,IAAD,CAAOA,OAAK,GACR,kBAAC,IAAD,CAAOK,KAAK,WAAWrD,KAAK,WACrB8H,SAAU,SAACC,GAAD,OAAW,EAAKT,SAAWS,KAFhD,gBAMJ,kBAAC,IAAD,CAAQ1E,KAAK,SAASsC,MAAM,SAASrC,MAAM,WAA3C,iB,GArGPC,aCmCNyE,MApDf,SAAgB5H,GACZ,OACI,yBAAKhB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAM4C,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAK5C,UAAU,kBACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,sBAJjB,mBAIyD,6BACrD,uBAAGA,UAAU,oBALjB,mBAKuD,6BACnD,uBAAGA,UAAU,yBANjB,KAM8C,uBAAG8C,KAAK,6BAAR,wBAIlD,yBAAK9C,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiC8C,KAAK,uBAAsB,uBACrE9C,UAAU,uBACd,uBAAGA,UAAU,mCACV8C,KAAK,2CAA0C,uBAAG9C,UAAU,oBAC/D,uBAAGA,UAAU,mCAAmC8C,KAAK,+BAA8B,uBAC/E9C,UAAU,oBACd,uBAAGA,UAAU,kCAAkC8C,KAAK,uBAAsB,uBACtE9C,UAAU,mBACd,uBAAGA,UAAU,iCAAiC8C,KAAK,uBAAsB,uBACrE9C,UAAU,mBACd,uBAAGA,UAAU,sBAAsB8C,KAAK,WAAU,uBAAG9C,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,eC0CXkB,EAAgB,iBAAO,CAChC+C,KCzF0B,mBD4FjB4E,EAAe,SAACC,GAAD,MAAc,CACtC7E,KC5FyB,gBD6FzB8E,QAASD,IAGAE,EAAY,SAAC1D,GAAD,MAAa,CAClCrB,KChGsB,aDiGtB8E,QAASzD,IAGA2D,EAAiB,SAACH,GAAD,MAAc,CACxC7E,KClG2B,kBDmG3B8E,QAASD,IAGAI,EAAc,SAACtC,GAAD,MAAe,CACtC3C,KCxGwB,eDyGxB8E,QAASnC,IA0BAuC,EAAgB,iBAAO,CAChClF,KCjI0B,mBDoIjBmF,EAAe,SAACN,GAAD,MAAc,CACtC7E,KCnIyB,gBDoIzB8E,QAASD,IAGAO,EAAY,SAACC,GAAD,MAAa,CAClCrF,KCzIsB,aD0ItB8E,QAASO,IA0BA9H,EAAiB,iBAAO,CACjCyC,KClK2B,oBDqKlBsF,EAAgB,SAACT,GAAD,MAAc,CACvC7E,KCrK0B,iBDsK1B8E,QAASD,IAGAU,EAAa,SAAC1E,GAAD,MACtB,CACIb,KC1KmB,cD2KnB8E,QAASjE,I,QElJX2E,E,kLAGEhH,KAAKzB,MAAM0I,cACXjH,KAAKzB,MAAM2I,gBACXlH,KAAKzB,MAAM4I,cACXnH,KAAKzB,MAAM6I,iB,+BAGL,IAAD,OA6BL,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,kBAAD,KACI,kBAAC,gBAAD,CAAetE,IAAK9C,KAAKzB,MAAM8I,SAASvE,IAAKwE,WAAW,OAAOC,QAAS,KACpE,kBAAC,IAAD,CAAQF,SAAUrH,KAAKzB,MAAM8I,UACzB,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UAlCvB,WACb,OACI,kBAAC,EAAD,CACIjJ,KAAM,EAAKD,MAAMsE,OAAOA,OAAO6E,QAAO,SAAClJ,GAAD,OAAUA,EAAKmJ,YAAU,GAC/DlJ,cAAe,EAAKF,MAAMsE,OAAOlF,UACjCe,YAAa,EAAKH,MAAMsE,OAAOjF,QAC/Be,UAAW,EAAKJ,MAAMqJ,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9E/I,aAAc,EAAKL,MAAMqJ,WAAWjK,UACpCkB,aAAc,EAAKN,MAAMqJ,WAAWhK,QACpCkB,OAAQ,EAAKP,MAAM8D,QAAQA,QAAQqF,QAAO,SAAA5I,GAAM,OAAIA,EAAO6I,YAAU,GACrE5I,eAAgB,EAAKR,MAAM8D,QAAQ1E,UACnCqB,eAAgB,EAAKT,MAAM8D,QAAQzE,aAwB3B,kBAAC,IAAD,CAAO4J,KAAK,WAAWC,UAAW,kBAAI,kBAAC,EAAD,CAAOpF,QAAS,EAAK9D,MAAM8D,QAAQA,aACzE,kBAAC,IAAD,CAAOyF,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM5E,OAAQ,EAAKtE,MAAMsE,YACpE,kBAAC,IAAD,CAAO2E,KAAK,gBAAgBC,UAtB7B,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACjB,OACI,kBAAC,EAAD,CACIvJ,KAAM,EAAKD,MAAMsE,OAAOA,OAAO6E,QAAO,SAAClJ,GAAD,OAAUA,EAAKoC,KAAOoH,SAASD,EAAME,OAAO3E,OAAQ,OAAK,GAC/F3F,UAAW,EAAKY,MAAMsE,OAAOlF,UAC7BC,QAAS,EAAKW,MAAMsE,OAAOjF,QAC3BuG,SAAU,EAAK5F,MAAM4F,SAASA,SAASuD,QAAO,SAACjE,GAAD,OAAaA,EAAQH,SAAW0E,SAASD,EAAME,OAAO3E,OAAQ,OAC5G4E,gBAAiB,EAAK3J,MAAM4F,SAASvG,QACrCyF,YAAa,EAAK9E,MAAM8E,iBAehB,kBAAC,IAAD,CAAOyE,OAAK,EAACN,KAAK,aACXC,UAAW,kBAAM,kBAAC,EAAD,CAASvH,kBAAmB,EAAK3B,MAAM2B,kBAC9BD,aAAc,EAAK1B,MAAM0B,kBAE1D,kBAAC,IAAD,CAAUE,GAAG,aAIzB,kBAAC,EAAD,W,GAxDGuB,aA8DJyG,cAAWC,mBAvFF,SAAAjF,GACpB,MAAO,CACHN,OAAQM,EAAMN,OACdsB,SAAUhB,EAAMgB,SAChByD,WAAYzE,EAAMyE,WAClBvF,QAASc,EAAMd,YAII,SAAAgG,GAAQ,MAAK,CACpChF,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC4E,EFhB3B,SAAC/E,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAAC4E,GAE7D,IAAMC,EAAa,CACfhF,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFA6E,EAAWjE,MAAO,IAAIO,MAAO2D,cAEtBC,MAAMhL,EAAU,WAAY,CAC/BiL,OAAQ,OACRxG,KAAMyG,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EApCA,SAAC5E,GAAD,MAAc,CACpCjC,KCJuB,cDKvB8E,QAAS7C,GAkCsB6F,CAAWP,OACrCQ,OAAM,SAAAN,GACH9G,QAAQC,IAAI,gBAAiB6G,EAAMO,SACnClE,MAAM,4CAA8C2D,EAAMO,aElBPnG,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FwD,YAAa,WACToB,GFoByB,SAACA,GAI9B,OAFAA,EAAS5J,GAAc,IAEhB+J,MAAMhL,EAAU,UAClBsL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjG,GAAM,OAAIwF,EAAS9B,EAAU1D,OAClC0G,OAAM,SAAAN,GAAK,OAAIZ,EAASjC,EAAa6C,EAAMO,iBEtChDtJ,kBAAmB,WACfmI,EAASoB,UAAQC,MAAM,cAE3BxC,cAAe,kBAAMmB,GFsCU,SAACA,GAChC,OAAOG,MAAMhL,EAAU,YAClBsL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3E,GAAQ,OAAIkE,EAAS5B,EAAYtC,OACtCoF,OAAM,SAAAN,GAAK,OAAIZ,EAAS7B,EAAeyC,EAAMO,iBEtDlDrC,YAAa,kBAAMkB,GFiFU,SAACA,GAI9B,OAFAA,EAAS3B,KAEF8B,MAAMhL,EAAU,cAClBsL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjC,GAAM,OAAIwB,EAASzB,EAAUC,OAClC0C,OAAM,SAAAN,GAAK,OAAIZ,EAAS1B,EAAasC,EAAMO,iBEpGhDpC,aAAc,WACViB,GFoH0B,SAACA,GAG/B,OADAA,EAAStJ,GAAe,IACjByJ,MAAMhL,EAAU,WAClBsL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAzG,GAAO,OAAIgG,EAAStB,EAAW1E,OACpCkH,OAAM,SAAAN,GAAK,OAAIZ,EAASvB,EAAcmC,EAAMO,iBErIjDvJ,aAAc,SAACF,GAAD,OFyJU,SAAC+D,GACzB,IAAI6F,EAAQ,eAAO7F,GAEnB,OADA6F,EAAStF,MAAO,IAAIO,MAAO2D,cACpBC,MAAMhL,EAAU,WACnB,CACIiL,OAAQ,OACRxG,KAAMyG,KAAKC,UAAUgB,GACrBf,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAGhBC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIzD,MAAMoD,KAAKC,UAAUI,OACtCQ,OAAM,SAAAN,GACH9G,QAAQC,IAAI,iBAAkB6G,EAAMO,SACpClE,MAAM,gDAAkD2D,EAAMO,YEvL5CvJ,CAAaF,OAiEjBqI,CAA6CpB,I,iBCrG1D4C,GAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbV,QAAS,ICLAW,GAAS,WAIP,IAJQhH,EAIT,uDAJiB,CAC3BxF,WAAW,EACXC,QAAS,KACTiF,OAAQ,IACTuH,EAAW,uCACV,OAAQA,EAAO5I,MACX,IHLkB,aGMd,OAAO,eAAI2B,EAAX,CAAkBxF,WAAW,EAAOC,QAAS,KAAMiF,OAAQuH,EAAO9D,UAEtE,IHVsB,iBGWlB,OAAO,eAAInD,EAAX,CAAkBxF,WAAW,EAAMC,QAAS,KAAMiF,OAAQ,KAE9D,IHZqB,gBGajB,OAAO,eAAIM,EAAX,CAAkBxF,WAAW,EAAOC,QAASwM,EAAO9D,UAExD,QACI,OAAOnD,IChBNkH,GAAW,WAAoD,IAAnDlH,EAAkD,uDAA1C,CAAEvF,QAAS,KAAMuG,SAAS,IAAKiG,EAAW,uCACvE,OAAQA,EAAO5I,MACX,IJCoB,eIAhB,OAAO,eAAI2B,EAAX,CAAkBvF,QAAS,KAAMuG,SAAUiG,EAAO9D,UAEtD,IJDuB,kBIEnB,OAAO,eAAInD,EAAX,CAAkBvF,QAASwM,EAAO9D,UAEtC,IJVmB,cIWf,IAAI7C,EAAU2G,EAAO9D,QACrB,OAAO,eAAKnD,EAAZ,CAAmBgB,SAAUhB,EAAMgB,SAASmG,OAAO7G,KAEvD,QACI,OAAON,ICbNoH,GAAa,WAEM,IAFLpH,EAEI,uDAFK,CAAExF,WAAW,EAC7CC,QAAS,KACTgK,WAAW,IAAKwC,EAAW,uCAC3B,OAAQA,EAAO5I,MACX,ILGkB,aKFd,OAAO,eAAI2B,EAAX,CAAkBxF,WAAW,EAAOC,QAAS,KAAMgK,WAAYwC,EAAO9D,UAE1E,ILDsB,iBKElB,OAAO,eAAInD,EAAX,CAAkBxF,WAAW,EAAMC,QAAS,KAAMgK,WAAY,KAElE,ILFqB,gBKGjB,OAAO,eAAIzE,EAAX,CAAkBxF,WAAW,EAAOC,QAASwM,EAAO9D,UAExD,QACI,OAAOnD,ICdNqH,GAAU,WAIR,IAJSrH,EAIV,uDAJkB,CAC5BxF,WAAW,EACXC,QAAS,KACTyE,QAAS,IACV+H,EAAW,uCACV,OAAQA,EAAO5I,MACX,INMmB,cMLf,OAAO,eAAI2B,EAAX,CAAkBxF,WAAW,EAAOC,QAAS,KAAMyE,QAAS+H,EAAO9D,UACvE,INEuB,kBMDnB,OAAO,eAAInD,EAAX,CAAkBxF,WAAW,EAAMC,QAAS,KAAMyE,QAAS,KAE/D,INAsB,iBMClB,OAAO,eAAIc,EAAX,CAAkBxF,WAAW,EAAOC,QAASwM,EAAO9D,QAASjE,QAAS,KAE1E,QACI,OAAOc,I,wCCTbsH,GCKYC,sBACVC,0BAAgB,aACZ9H,OAAQsH,GACRhG,SAAUkG,GACVzC,WAAY2C,GACZlI,QAASmI,IACNI,sBAAY,CACXC,SAAUjB,OAGlBkB,0BAAgBC,KAAMC,ODEfC,G,uKAZP,OACI,kBAAC,WAAD,CAAUR,MAAOA,IACb,kBAAC,IAAD,KACI,yBAAKlN,UAAU,OACX,kBAAC,EAAD,a,GAPNmE,aEEEwJ,QACW,cAA7BC,OAAO9D,SAAS+D,UAEe,UAA7BD,OAAO9D,SAAS+D,UAEhBD,OAAO9D,SAAS+D,SAASrD,MACvB,2DCTNsD,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,GAAD,OAEDC,SAASC,eAAe,SDsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEdvC,OAAM,SAAAN,GACL9G,QAAQ8G,MAAMA,EAAMO,a","file":"static/js/main.16ac5215.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"/>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item = {}, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading/>\r\n        );\r\n    } else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    } else\r\n        return (\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Col, Label, Row} from 'reactstrap';\r\nimport {Control, Errors, Form} from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br/>\r\n                            Clear Water Bay, Kowloon<br/>\r\n                            HONG KONG<br/>\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br/>\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br/>\r\n                            <i className=\"fa fa-envelope\"></i>: <a\r\n                            href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                                <i className=\"fa fa-phone\"/> Call\r\n                            </a>\r\n                            <a role=\"button\" href=\"tel:+85212345678\" className=\"btn btn-info\"><i\r\n                                className=\"fa fa-skype\"/> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                                <i className=\"fa fa-envelope-o\"/> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                  placeholder=\"First Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                  placeholder=\"Last Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                  placeholder=\"Tel. Number\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required,\r\n                                                      minLength: minLength(3),\r\n                                                      maxLength: maxLength(15),\r\n                                                      isNumber\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                  placeholder=\"Email\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, validEmail\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                                      rows=\"12\"\r\n                                                      className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl'\r\nimport {Fade, Stagger} from 'react-animation-components'\r\n\r\nfunction About(props) {\r\n    function RenderLeader({leader: {image, name, designation, description}}) {\r\n        return (\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + image} alt={name}/>\r\n                </Media>\r\n\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{name}</Media>\r\n                    <p>{designation}</p>\r\n                    <p>{description}</p>\r\n                </Media>\r\n            </Media>\r\n        );\r\n    };\r\n\r\n    console.log(\"Leaders\", props.leaders);\r\n    const leaders = props.leaders.map((leader) => <Fade in> <RenderLeader leader={leader}/></Fade>);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par\r\n                        excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere\r\n                        else, it enjoys patronage from the A-list clientele in Hong Kong. Featuring four of the best\r\n                        three-star Michelin chefs in the world, you never know what will arrive on your plate the next\r\n                        time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain\r\n                        started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in\r\n                        a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n\r\n                            {leaders}\r\n                        </Stagger>\r\n\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport {Breadcrumb, BreadcrumbItem, Card, CardImg, CardImgOverlay, CardTitle} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading/>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Menu;\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from \"reactstrap\"\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Errors, LocalForm} from 'react-redux-form'\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Stagger} from 'react-animation-components';\r\n\r\n// function formatDate(date) {\r\n//     const option = {year: \"numeric\", month: \"short\", day: \"numeric\"};\r\n//     const modifiedDate = new Date(date).toLocaleDateString(\"en-US\", option);\r\n//     return modifiedDate;\r\n// };\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false\r\n        }\r\n    }\r\n\r\n    handleToggle = () => this.setState({modalOpen: !this.state.modalOpen});\r\n\r\n    submitHandle = (values) => {\r\n        this.handleToggle();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button className=\"bg-white text-dark\" onClick={this.handleToggle}>\r\n                    <i className=\"fa fa-pencil fa-lg\"/> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.modalOpen} toggle={this.handleToggle}>\r\n                    <ModalHeader toggle={this.handleToggle}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(value) => this.submitHandle(value)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={4}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\"\r\n                                                    defaultValue=\"1\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={4}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\"\r\n                                                  placeholder=\"Your Name\"\r\n                                                  validators={{\r\n                                                      minLength: minLength(3),\r\n                                                      maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={4}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{required}}\r\n                                                      rows=\"6\"\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{required: 'Comment Required'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col><Button type=\"submit\" color=\"primary\">Submit</Button></Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish: {image, name, description}}) {\r\n    return (\r\n        <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + image} alt={name}/>\r\n                <CardBody>\r\n                    <CardTitle>{name}</CardTitle>\r\n                    <CardText>{description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n};\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    console.log(comments);\r\n    if (comments != null) {\r\n        const commentsAsReactComponents = <Stagger in>\r\n            {comments.map(({id, comment, author, date}) => {\r\n                return (\r\n                    <div key={id}>\r\n                        <li>{comment}</li>\r\n                        <br/>\r\n                        <li>\r\n                            -- {author}, {\r\n                            new Intl.DateTimeFormat('en-US', {\r\n                                year: \"numeric\",\r\n                                month: \"short\",\r\n                                day: \"2-digit\"\r\n                            }).format(new Date(Date.parse(date)))}\r\n                        </li>\r\n                        <br/>\r\n                    </div>\r\n                );\r\n            })}\r\n        </Stagger>;\r\n        return <ul className='list-unstyled'>\r\n            {commentsAsReactComponents}\r\n            <CommentForm dishId={dishId} postComment={postComment}/>\r\n        </ul>;\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading/>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                                        postComment={props.postComment}\r\n                                        dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    else return <div/>;\r\n};\r\n\r\nexport default DishDetail;\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Jumbotron,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavItem\r\n} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\"\r\n                                                                       width=\"41\"\r\n                                                                       alt='Ristorante Con Fusion'/></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span\r\n                                        className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span\r\n                                        className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span\r\n                                        className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span\r\n                                        className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span\r\n                                        className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion\r\n                                    experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                       innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                       innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                           innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br/>\r\n                            Clear Water Bay, Kowloon<br/>\r\n                            HONG KONG<br/>\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br/>\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br/>\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i\r\n                                className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\"\r\n                               href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i\r\n                                className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i\r\n                                className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i\r\n                                className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comments', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => (\r\n    {\r\n        type: ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    }\r\n)\r\n\r\nexport const postFeedback = (value) => {\r\n    let newValue = {...value}\r\n    newValue.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(newValue),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => alert(JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post comments ', error.message);\r\n            alert('Your Feedback could not be submitted\\nError: ' + error.message)\r\n        });\r\n\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\r\nexport const ADD_LEADERS = 'ADD_LEADERS'","import React, {Component} from \"react\";\r\nimport Home from './HomeComponent';\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from './FooterComponent';\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {fetchComments, fetchDishes, fetchLeaders, fetchPromos, postComment, postFeedback} from '../redux/ActionCreators'\r\nimport {actions} from 'react-redux-form';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => {\r\n        dispatch(fetchDishes())\r\n    },\r\n    resetFeedbackForm: () => {\r\n        dispatch(actions.reset('feedback'))\r\n    },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => {\r\n        dispatch(fetchLeaders())\r\n    },\r\n    postFeedback: (values) => postFeedback(values),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n        const DishWithId = ({match}) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage}/>\r\n                            <Route path='/aboutus' component={()=><About leaders={this.props.leaders.leaders}/>} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes}/>}/>\r\n                            <Route path='/menu/:dishId' component={DishWithId}/>\r\n                            <Route exact path='/contactus'\r\n                                   component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                                             postFeedback={this.props.postFeedback}/>}/>\r\n\r\n                            <Redirect to=\"/home\"/>\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, {Component} from \"react\";\nimport Main from \"./components/MainComponent\";\nimport \"./App.css\";\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers,applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}